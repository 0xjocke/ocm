@mixin darkBg($percent: 20%) {
	color: darken(white, 20%);
	background: lighten(black, $percent);	
}

@mixin arrow($direction, $size, $color: black){
	content:"";
	position: absolute;
	border: $size solid;
	border-color:rgba(0, 0 ,0, 0);    
	@if $direction == up{
		border-bottom-color: $color;
	}@else if $direction == down{
		border-top-color: $color;
	}@else if $direction == left{
		border-right-color: $color;
	}@else if $direction == right{
		border-left-color: $color;
	}
}

@mixin icon($type) {
	background-image: $type;
	background-size: 1.875rem 1.875rem;
	background-position: 0.68rem 0.5rem;
	background-repeat: no-repeat;
}

@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

@mixin rem-fallback($property, $values...) {
  $max: length($values);
  $pxValues: '';
  $remValues: '';

  @for $i from 1 through $max {
    $value: strip-unit(nth($values, $i));
    $pxValues: #{$pxValues + $value*16}px;

    @if $i < $max {
      $pxValues: #{$pxValues + " "};
    }
  } 

  @for $i from 1 through $max {
    $value: strip-unit(nth($values, $i));
    $remValues: #{$remValues + $value}rem;

    @if $i < $max {
      $remValues: #{$remValues + " "};
    }
  } 
  
  #{$property}: $pxValues; 
  #{$property}: $remValues; 
}